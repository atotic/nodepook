# Comon commands 
chrome://net-internals/#dns  # chrome dns cache clear
sudo dscacheutil -flushcache # clear dns cache
curl -D - http://localhost -o /dev/null # curl headers
sudo chkconfig --add s53hostname # adds init.d script to startup
ssh -i ~/.ssh/AmazonEC2KeyPair_May2014.pem ec2-user@AmazonHost

# Testing

DEBUG=pook* mocha test/*/**_test
grunt # has a bunch of command-line utilities
grunt eraseDatabase
grunt readItem:photos:id

# Database

SimpleDb, s3. Use aws_util module

s3
	photos, resized photos
sdb
	photo meta information

# AWS
Using IAM. pookio_dev has access to everything

# Servers:

s3:
photos:
	http://pookio-test.s3-website-us-west-2.amazonaws.com/
	redirects to resizer on error

EC2 instance:
binaries: 
node, npm
npm install -g mocha grunt grunt-cli pm2
yum install GraphicsMagick expat-devel
exiv2 - download, install

# sets AWS environment variables
nano /etc/profile.d/pookio.sh 
cp bin/pookio.initd /etc/init.d/pookio
cp bin/s53hostname.initd /etc/init.d/s53hostname
cp bin/nginx.resize.conf  /etc/nginx/nginx.conf

# make daemons start on startup:
sudo chkconfig --add nginx
sudo chkconfig --add pookio
sudo chkconfig --add s53hostname

# make grunt update route53 on startup

jsgroupdoc
what library to use for synchronization:
http://strongloop.com/strongblog/node-js-replication-mobile-offline-sync-loopback/?utm_source=feedly&utm_reader=feedly&utm_medium=rss&utm_campaign=node-js-replication-mobile-offline-sync-loopback

ui->data binding:
constraintjs http://cjs.from.so/

object.observe
http://www.html5rocks.com/en/tutorials/es7/observe/
