# TESTING

Unit tests are in the same directory as files being tested.

## Server tests
test runner is mocha
assertion library is chai.assert
tests are in the same directory as files, 
routes use supertest to simulate browsing

running tests:
all: find server -name "*spec.js" | xargs mocha
one: DEBUG=pook* mocha server/routes/photos.spec.js

## Browser tests
karma/mocha/chai

karma start test/karma.conf.js

## Firebase security
manual tests in security simulator

- 

  #append only write is granted to anyone's inbox,
  #so users can send messages to strangers
 # - location: users/$userid/inbox/
 #   write:    createOnly() && isLoggedIn()

  #the inbox owner can delete their incoming mail
#  - location: users/$userid/inbox/
 #   write:    deleteOnly() && $userid === auth.username

  #write and delete is given to owners outbox
 # - location: users/$userid/outbox/
 #   write:    true

  #owners can read everything in their inbox and outbox
  #- location: users/$userid/
  #  read:    $userid === auth.username
schema:
  type: object
  properties:
    users: # the users subtree is a collection of users
      type: object
      $userid: #wildchild expression of many children
        type: object
        properties: #each user has an optional inbox and outbox
          account: object
          required: [email]
          properties:
            email: { type: string }
            firstName: { type: string }
            lastName: { type: string }
            street1: { type: string }
            street2: { type: string }
            city: { type: string }
            state: { type: string }
            zip: { type: string }
            additionalProperties: false
    photos:
      type: object
      $photoId:
        type: object
        properties:
          ownerId: { type: string }
  additionalProperties: false

access:
  - location: users/$userid/account
    write: isUser($userid)
    read: isUser($userid)
  - location: users/$userid/photos
    write: $userid === auth.uid

