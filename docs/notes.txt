TODO:
pm2 inside pookio.initd
user authentication: passport
jsdoc: my own, or existing frameworks

NEXT
User authentication:

RESEARCH:
document syncing
couchdb?

pdf generation

PDF generation: http://www.feedhenry.com/server-side-pdf-generation-node-js/
PDF generation with http://dailyjs.com/2014/06/19/phridge/

sync:
http://strongloop.com/strongblog/node-js-replication-mobile-offline-sync-loopback/
http://stackoverflow.com/questions/16043722/open-source-service-like-parse-or-firebase
https://groups.google.com/forum/#!topic/polymer-dev/3c56Evdt-5Q

BUSINESS:
Can she launch my product? http://unicornfree.com/

DONE:
auth: use session to keep user logged in
auth: register/login. Using my own library for login/register. Will use passport for google/fb logins
bower for vendor libraries
use karma/chai/mocha as testing framework
refactored code into browser/server
ripped out promises. Although I prefer them, callbacks are node standard and async makes callbacks ok
dns via route53. Create command line tool to set
resize images on ec2: run servers on boot, run forever, redirect dns via route 53, s3 redirect
switched pook.io DNS to Route53
ec2 instance is running,
ec2: installed node, etc, passed tests
http://www.bennadel.com/blog/2321-how-i-got-node-js-running-on-a-linux-micro-instance-using-amazon-ec2.htm
nginx on my mac as dev.pook.io
amazon bucket redirection, save images in less-permanent storage
database + models
post-process uploaded file: rotate, exif data
using mocha for unit tests
using promised-io to manage callback chains
upload to S3
upload file
serve file as a static file
