extends ../layout

block content
  link(rel="import",  href="vendor/core-drag-drop/core-drag-drop.html")
  link(rel='import', href='vendor/core-toolbar/core-toolbar.html')

  pook-user(user=JSON.stringify(user), photos=JSON.stringify(photos))
  
  core-toolbar(style='color:white;background:#4285f4')
    span(flex)= user.email
    a(href='/auth/logout', class='paper-button') logout
  pook-flash
  pook-photolist(height=100)
  div Upload a file
  form#upload(is='pook-form', action="/photos", method="post", enctype="multipart/form-data")
    input(type="file", name="myPhoto")
    input(type="submit")

  div#target I am a target
    core-drag-drop

  style.
    body {
      user-select: none; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none;
    }
    #target {
      display: block;
      position: relative;
      width: 100px;
      height: 100px;
      border: 1px solid green;
      cursor: move;
    }
    core-drag-avatar {
      border: 1px solid gray;
      width: 100px;
      height: 100px;
      cursor: move;
    }
  script.
    // upload button handling
    var upload = document.querySelector('#upload');
    upload.addEventListener('beforeSubmit', function(ev) {
      var $user = document.querySelector('pook-user');
      // create photo
      var photo = $user.createPhoto();
      var xhr = ev.detail;
      xhr.photo = photo;
      // listen to progress events
      xhr.upload.addEventListener('progress', function handleProgress(pe) {
        if (pe.lengthComputable && pe.total != 0)
          xhr.photo.progress = pe.loaded / pe.total;
        else
          xhr.photo.progress = -1;
      });
    });
    upload.addEventListener('success', function handleUploadSuccess(ev) {
      var oldPhoto = ev.detail.photo;
      var newPhoto = JSON.parse(ev.detail.response).item;
      // handle duplicates
      var $user = document.querySelector('pook-user');
      var duplicate = $user.findPhotoById(newPhoto.itemId);
      if (duplicate != -1) {
        document.querySelector('pook-flash').warn = 'Photo was a duplicate';
        $user.photos.splice( $user.photos.indexOf(oldPhoto), 1 );
      }
      else {
        debugger;
        // no dups, update the photo
        delete oldPhoto.progress;
        for (p in newPhoto)
          oldPhoto[p] = newPhoto[p];
      }
    });


    // drag'n'drop
    document.querySelector('#target')
      .addEventListener('drag-start', function(e) {
        console.log("drag start");
        var dragInfo = e.detail;
        dragInfo.drag = function() {
          document.body.style.cursor = 'move';
          console.log('drag');
        }
        dragInfo.drop = function() {
          document.body.style.cursor = '';
          console.log('drop');
        }
    });
